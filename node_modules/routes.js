
module.exports populateCache = function(fs) {
	/**
	 *  Populate the cache.
	 */
	var zcache = { 'index.html': '' };
 
    //  Local cache for static content. We sync-read just once per file.
    zcache['index.html'] = fs.readFileSync('./index.html');
    zcache['app.js'] = fs.readFileSync('./scripts/app.js');
	zcache['jquery.ui.map.full.min.js'] = fs.readFileSync('./scripts/jquery.ui.map.full.min.js');
	
	return zcache;

} 
	
/**
 *  Retrieve entry (content) from cache.
 *  @param {string} key  Key identifying content to retrieve from cache.
 */
module.exports cache_get = function(zcache, key) { return zcache[key]; };

**
 *  Create REST routing functions
 */
module.exports createRoutes = function(app) {
    var routes = { }

    // Routes for /health, /asciimo /scripts, and /index.html
    app.routes['/health'] = function(req, res) {
        res.send('1');
    } /* health */

    app.routes['/asciimo'] = function(req, res) {
        var link = "http://i.imgur.com/kmbjB.png";
        res.send("<html><body><img src='" + link + "'></body></html>");
    } /* asciimo */

    app.routes['/'] = function(req, res) {
        res.setHeader('Content-Type', 'text/html');
        res.send(app.cache_get('index.html') );
    } /* root */

	app.routes['/scripts/app.js'] = function(req, res) {
		res.setHeader('Content-Type', 'text/javascript');
		res.send(app.cache_get('app.js') );
	} /* scripts */
	
	app.routes['/scripts/jquery.ui.map.full.min.js'] = function(req, res) {
		res.setHeader('Content-Type', 'text/javascript');
		res.send(app.cache_get('jquery.ui.map.full.min.js') );
	} /* scripts */


	app.routes['/near/zip/:zip'] = function(req, res) {

		// Fuquay record
		// db.zips.find({loc: {$near: [ 35.579952, 78.780807 ]}}) -->

		var zipCode = req.params.zip;

		db.collection( app.coll ).find( {zip: zipCode}).toArray( function( err, center)  {
			if (center && center.length > 0){
				var record = center[0];
				var y =  record.loc.y;
				var x =  record.loc.x;
				res.redirect("/near/lat/"+y+"/lon/"+x);
			} else {
				res.redirect("/");
			}
		});

	} /* nearZip */
	
	app.routes['/near/lat/:lat/lon/:lon'] = function(req, res) {

		var limit = 10;
		var lat =  Number(req.params.lat);
		var lon =  Number(req.params.lon);
		var query = {loc: {$near: [ lat, lon ] } }

		db.collection( app.coll ).find( query ).limit( limit ).toArray( function( err, locations ) {
			if (!locations ) {
				res.send('{err: "Nothing found"}');
			} else {
				res.send(locations);
			}
		});	
  	} /* nearLatLon */
	
	app.routes['/cities/:like'] = function(req, res) {
	
		var limit = 20;
		var like = req.params.like;
		
		if (!like) {
			res.send('{err: "Bad input"}');
		} else {
			like = like.toUpperCase();
			
			// Regexp wildcard suffix query
			var query = { city: { $regex: (/^%s.*$/, like)} }
		
			db.collection( coll ).find( query ).limit( limit ).toArray( function( err, cities ) {
				if (!cities ) {
					res.send('{err: "Nothing found"}');
				} else {
					res.send(cities);
				}
			});	
		}		
	} /* cities search */

} /* create routes */
